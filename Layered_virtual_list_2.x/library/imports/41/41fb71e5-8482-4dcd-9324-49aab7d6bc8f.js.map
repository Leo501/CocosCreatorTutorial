{"version":3,"sources":["assets\\Scene\\TestMatrix.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewClass extends cc.Component {\r\n\r\n    @property(cc.Node)\r\n    target: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    targetParent: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    srcTarget: cc.Node = null;\r\n\r\n    @property(cc.Node)\r\n    srcTargetParent: cc.Node = null;\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        // cc.director.on(cc.Director.EVENT_BEFORE_DRAW, this.onBeforeDraw, this);\r\n    }\r\n\r\n    start() {\r\n        // this.scheduleOnce(() => {\r\n        //     this.target.x = 100;\r\n        //     this.target.scaleX = 2;\r\n        // }, 3);\r\n\r\n        // this.scheduleOnce(() => {\r\n        //     this.targetParent.x = 10;\r\n        //     this.target.scaleX = 1.1;\r\n        // }, 1);\r\n        let targetNode = this.target; // 需要获取世界矩阵的节点\r\n        let parentNode = this.targetParent; // 要转换到的节点\r\n\r\n        let localMatrix = cc.mat4();\r\n        targetNode.getLocalMatrix(localMatrix);\r\n        this.getMatrixInfo(localMatrix);\r\n\r\n        // 获取目标节点的世界矩阵\r\n        let worldMatrix = cc.mat4();\r\n        targetNode.getWorldMatrix(worldMatrix)\r\n        // 获取父节点的世界矩阵\r\n        let parentWorldMatrix = cc.mat4();\r\n        parentNode.getWorldMatrix(parentWorldMatrix);\r\n\r\n        // 获取父节点的逆矩阵\r\n        let parentInverseMatrix = parentWorldMatrix.invert();\r\n\r\n        // 将目标节点的世界矩阵转换为父节点的本地矩阵\r\n        let localMatrix2 = parentInverseMatrix.multiply(worldMatrix);\r\n\r\n        this.getMatrixInfo(localMatrix2);\r\n\r\n    }\r\n\r\n    matrixTransform() {\r\n        // 假设我们有一个目标节点和一个父节点\r\n        let targetNode = this.target; // 需要获取世界矩阵的节点\r\n        let parentNode = this.srcTargetParent; // 要转换到的节点\r\n\r\n        // 获取目标节点的世界矩阵\r\n        let worldMatrix = cc.mat4();\r\n        targetNode.getWorldMatrix(worldMatrix)\r\n\r\n        // 获取父节点的世界矩阵\r\n        let parentWorldMatrix = cc.mat4();\r\n        parentNode.getWorldMatrix(parentWorldMatrix)\r\n\r\n        // 获取父节点的逆矩阵\r\n        let parentInverseMatrix = parentWorldMatrix.invert();\r\n\r\n        // 将目标节点的世界矩阵转换为父节点的本地矩阵\r\n        let localMatrix = parentInverseMatrix.multiply(worldMatrix);\r\n\r\n\r\n        // 提取位置\r\n        let position = cc.v3(worldMatrix.m[12], worldMatrix.m[13], worldMatrix.m[14]);\r\n\r\n        // 提取缩放\r\n        let scaleX = Math.sqrt(worldMatrix.m[0] * worldMatrix.m[0] + worldMatrix.m[1] * worldMatrix.m[1] + worldMatrix.m[2] * worldMatrix.m[2]);\r\n        let scaleY = Math.sqrt(worldMatrix.m[4] * worldMatrix.m[4] + worldMatrix.m[5] * worldMatrix.m[5] + worldMatrix.m[6] * worldMatrix.m[6]);\r\n        let scaleZ = Math.sqrt(worldMatrix.m[8] * worldMatrix.m[8] + worldMatrix.m[9] * worldMatrix.m[9] + worldMatrix.m[10] * worldMatrix.m[10]);\r\n\r\n        // 提取旋转（假设是二维旋转）\r\n        let angle = Math.atan2(worldMatrix.m[1] / scaleX, worldMatrix.m[0] / scaleX) * (180 / Math.PI);\r\n\r\n        // 输出结果\r\n        console.log(\"Position:\", position);\r\n        console.log(\"Scale:\", cc.v3(scaleX, scaleY, scaleZ));\r\n        console.log(\"Angle:\", angle);\r\n    }\r\n\r\n    getMatrixInfo(matrix: cc.Mat4) {\r\n        // 提取位置\r\n        let position = cc.v3(matrix.m[12], matrix.m[13], matrix.m[14]);\r\n\r\n        // 提取缩放\r\n        let scaleX = Math.sqrt(matrix.m[0] * matrix.m[0] + matrix.m[1] * matrix.m[1] + matrix.m[2] * matrix.m[2]);\r\n        let scaleY = Math.sqrt(matrix.m[4] * matrix.m[4] + matrix.m[5] * matrix.m[5] + matrix.m[6] * matrix.m[6]);\r\n        let scaleZ = Math.sqrt(matrix.m[8] * matrix.m[8] + matrix.m[9] * matrix.m[9] + matrix.m[10] * matrix.m[10]);\r\n\r\n        // 提取旋转（假设是二维旋转）\r\n        let angle = Math.atan2(matrix.m[1] / scaleX, matrix.m[0] / scaleX) * (180 / Math.PI);\r\n\r\n        // 输出结果\r\n        console.log(\"Position:\", position);\r\n        console.log(\"Scale:\", cc.v3(scaleX, scaleY, scaleZ));\r\n        console.log(\"Angle:\", angle);\r\n    }\r\n\r\n    onDestroy(): void {\r\n        cc.director.off(cc.Director.EVENT_BEFORE_DRAW, this.onBeforeDraw, this);\r\n    }\r\n\r\n\r\n    onBeforeDraw() {\r\n        this.checkDirty(this.target);\r\n        this.checkDirty(this.targetParent);\r\n    }\r\n\r\n    checkDirty(node: cc.Node) {\r\n        //@ts-ignore\r\n        let _localMatDirty = node._localMatDirty;\r\n        if (_localMatDirty) {\r\n            console.log(node.name, _localMatDirty);\r\n        }\r\n        //@ts-ignore\r\n        let _worldMatDirty = node._worldMatDirty;\r\n        if (_worldMatDirty) {\r\n            console.log(node.name, _worldMatDirty);\r\n        }\r\n        //@ts-ignore\r\n        let _renderFlag = node._renderFlag;\r\n        if (_renderFlag) {\r\n            console.log(node.name, _renderFlag);\r\n        }\r\n    }\r\n\r\n    // update (dt) {}\r\n}\r\n"]}